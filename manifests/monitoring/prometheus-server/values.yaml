grafana:
  enabled: false

commonLabels:
  prometheus.io/monitor: "true"

prometheus:
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 0

  prometheusSpec:
    replicas: 1
    retention: 360d

    resources:
      requests:
        cpu: 100m
        memory: 2048Mi
      limits:
        cpu: 150m
        memory: 3072Mi

    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: csi-nfs
          accessModes: ["ReadWriteMany"]
          resources:
            requests:
              storage: 100Gi

    podAntiAffinity: soft
    podAntiAffinityTopologyKey: kubernetes.io/hostname
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: prometheus
            app.kubernetes.io/instance: prometheus-kube-prometheus-prometheus

    alertingEndpoints:
      - apiVersion: v2
        name: alertmanager
        namespace: monitoring
        pathPrefix: /
        port: http

    serviceMonitorSelector:
      matchLabels:
        prometheus.io/monitor: "true"

kube-state-metrics:
  metricLabelsAllowlist:
    - nodes=[*]
    - namespaces=[*]
    - pods=[*]

alertmanager:
  enabled: false

defaultRules:
  create: false
