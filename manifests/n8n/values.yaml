fullnameOverride: n8n

affinity: &affinity
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role.kubernetes.io/control-plane
              operator: DoesNotExist
    preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
            - key: topology.kubernetes.io/zone
              operator: In
              values:
                - alpha
        weight: 100

log:
  level: debug

db:
  type: postgresdb

externalPostgresql:
  database: n8n
  host: 10.0.100.7
  port: 54320
  username: n8n
  existingSecret: n8n-postgresql

existingEncryptionKeySecret: n8n-encryption-key

timezone: Europe/Warsaw

main:
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1024Mi

  livenessProbe:
    initialDelaySeconds: 60

  readinessProbe:
    initialDelaySeconds: 60

  affinity: *affinity

worker:
  mode: queue
  # count: 1

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2

  waitMainNodeReady:
    enabled: true

  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 1500m
      memory: 1024Mi

  affinity: *affinity

redis:
  enabled: true

serviceMonitor:
  enabled: true
  labels:
    prometheus.io/monitor: "true"

  include:
    defaultMetrics: true
    cacheMetrics: true
    messageEventBusMetrics: true
    workflowIdLabel: true
    nodeTypeLabel: true
    credentialTypeLabel: true
    apiEndpoints: true
    apiPathLabel: true
    apiMethodLabel: true
    apiStatusCodeLabel: true
    queueMetrics: true

webhook:
  mode: queue
  count: 1

  url: https://webhook.n8n.vrsf.in

  autoscaling:
    enabled: false

  waitMainNodeReady:
    enabled: true

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 750m
      memory: 512Mi

  affinity: *affinity
